{"version":3,"sources":["components/Logo/icon.tsx","components/nav-bar.tsx","components/Logo/logo.tsx","components/list-card.tsx","components/leaderboard.tsx","components/filters.tsx","components/message-feed.tsx","components/code-of-conduct.tsx","components/Logo/more-eyes-plz.tsx","components/welcome-card.tsx","models/octokit.ts","models/issues.ts","Main.tsx","Login.tsx","App.tsx","index.tsx","assets/github-actions.jpg"],"names":["Logo","className","style","height","flexFlow","justifyContent","fontSize","role","aria-label","marginTop","useStyles","makeStyles","theme","transition","borderRadius","backgroundColor","color","menu","minWidth","display","alignItems","signUpButton","margin","spacing","loginButton","borderColor","popover","pointerEvents","paper","padding","NavBar","props","classes","useState","anchorMenu","setAnchorMenu","anchorIcon","setAnchorIcon","handleClose","handlePopoverClose","open","Boolean","displayUserActions","isUserActive","Grid","item","Avatar","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","anchorEl","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Typography","variant","Divider","Button","window","location","href","displaySearchBar","TextField","fullWidth","placeholder","InputProps","startAdornment","InputAdornment","position","AppBar","Toolbar","container","xs","justify","aria-owns","undefined","onMouseEnter","onMouseLeave","Popover","disableRestoreFocus","Badge","invisible","header","fontWeight","labelContainer","comments","user","avatar","border","TagMapping","ListCard","Card","CardActionArea","url","CardContent","direction","src","name","sm","date","dateSplit","split","year","month","monthAbbr","day","formatDate","createdAt","title","tags","map","tag","index","tagLowerCase","toLowerCase","dataMap","Chip","key","label","size","disabled","small","width","paddingLeft","button","paddingBottom","divider","username","cursor","UserStats","elevation","CardHeader","light","List","ListItem","disableGutters","ListItemAvatar","ListItemText","primary","disableElevation","searchTags","type","chipData","setChipData","id","data","icon","chipVariant","enabled","newChipData","text","textAlign","disablePadding","ButtonBase","secondary","Paper","image","closeButton","float","buttonContainer","WelcomeCard","displayCard","setDisplayCard","IconButton","CardMedia","GitHubImage","CardActions","Octokit","require","MEEPS_REPO","owner","repo","Issue","data_","user_","commit_url_","commit_message_","lines","body","length","this","atob","labels","avatar_url","html_url","created_at","Issues","issues","octokit","listForRepo","state","sort","ids","i","iss","push","logo","App","issueIds","setIssueIds","useEffect","a","fetch","fetchIssues","cards","issue","get","console","log","commit_message","commit_url","user_url","Container","maxWidth","wrap","alignContent","Login","displayPage","Main","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yYAGe,SAASA,IACpB,OACI,yBAAKC,UAAU,OAAOC,MAAO,CAACC,OAAQ,OAAQC,SAAU,aAAcC,eAAgB,WAClF,wBAAIJ,UAAU,aAAaC,MAAO,CAACI,SAAU,SAAS,0BAAMC,KAAK,MAAMC,aAAW,QAA5B,iBACtD,wBAAIP,UAAU,aAAaC,MAAO,CAACI,SAAU,OAAQG,UAAW,QAAhE,SCAZ,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC,aAAc,CACVC,WAAY,4JACZC,aAAc,MACd,UAAY,CACRC,gBAAiB,UACjB,QAAU,CACNC,MAAO,aAInBC,KAAM,CACFR,UAAW,QAEf,YAAY,CACRS,SAAU,QACVL,WAAY,4JACZ,UAAW,CACPE,gBAAiB,2BAGzB,mBAAoB,CAChBI,QAAS,OACTf,SAAU,gBACVgB,WAAY,cAEhBC,aAAa,CACTC,OAAQV,EAAMW,QAAQ,EAAG,KAE7BC,YAAY,CACRF,OAAQV,EAAMW,QAAQ,EAAG,IACzBP,MAAO,QACPS,YAAa,SAEjBC,QAAS,CACLC,cAAe,QAEnBC,MAAO,CACHC,QAASjB,EAAMW,QAAQ,EAAG,QAInB,SAASO,EAAQC,GAC5B,IAAMC,EAAUtB,IAD2C,EAEvBuB,mBAAS,MAFc,mBAEpDC,EAFoD,KAExCC,EAFwC,OAGvBF,mBAAS,MAHc,mBAGpDG,EAHoD,KAGxCC,EAHwC,KASrDC,EAAc,WAChBH,EAAc,OAOZI,EAAqB,WACvBF,EAAc,OAGZG,EAAOC,QAAQL,GAEfM,EAAqBX,EAAMY,aAC7B,kBAACC,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACC,EAAA,EAAD,CAAQC,IAAI,WAAWC,gBAAc,cAAcC,gBAAc,OAAOC,QApB5D,SAACC,GACjBhB,EAAcgB,EAAMC,kBAoBhB,kBAACC,EAAA,EAAD,CACIpD,UAAW+B,EAAQf,KACnBqC,SAAUpB,EACVqB,aAAW,EACXf,KAAMC,QAAQP,GACdsB,QAASlB,EACTmB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAGhB,kBAACE,EAAA,EAAD,CAAU5D,UAAW+B,EAAQ,oBAAqBkB,QAASZ,GACvD,kBAACwB,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACA,kBAACD,EAAA,EAAD,iBAEJ,kBAACE,EAAA,EAAD,MACA,kBAACH,EAAA,EAAD,CAAU5D,UAAW+B,EAAQ,aAAckB,QAASZ,GAApD,YACA,kBAACuB,EAAA,EAAD,CAAU5D,UAAW+B,EAAQ,aAAckB,QAASZ,GAApD,YACA,kBAACuB,EAAA,EAAD,CAAU5D,UAAW+B,EAAQ,aAAckB,QAASZ,GAApD,YACA,kBAACuB,EAAA,EAAD,CAAU5D,UAAW+B,EAAQ,aAAckB,QAASZ,GAApD,YAIR,kBAACM,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACoB,EAAA,EAAD,CAAQF,QAAQ,WAAW9D,UAAW+B,EAAQR,YAAa0B,QAAS,kBAAMgB,OAAOC,SAASC,KAAK,4EAA/F,SACA,kBAACH,EAAA,EAAD,CAAQF,QAAQ,YAAY/C,MAAM,YAAYf,UAAW+B,EAAQX,aAAe6B,QAAS,kBAAMgB,OAAOC,SAASC,KAAK,4EAApH,YAGFC,EAAmBtC,EAAMY,aAC3B,kBAAC2B,EAAA,EAAD,CACIC,WAAS,EACTC,YAAY,YACZT,QAAQ,WACRU,WAAY,CACRC,eACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACrB,kBAAC,IAAD,UAMhB,KAEJ,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAClC,EAAA,EAAD,CAAMmC,WAAS,EAAC3D,WAAW,SAASG,QAAS,GACzC,kBAACqB,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,GACX,kBAAC,EAAD,OAEJ,kBAACpC,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,GACVX,GAEL,kBAACzB,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,EAAGD,WAAS,EAAC3D,WAAW,SAAS6D,QAAQ,WAAW1D,QAAS,GACxE,kBAACqB,EAAA,EAAD,CAAMC,MAAI,EAAC5C,UAAW+B,EAAQ,cAC1BkD,YAAW1C,EAAO,0BAAuB2C,EACzClC,gBAAc,OACdjC,MAAM,YACNoE,aA5EE,SAACjC,GACvBd,EAAcc,EAAMC,gBA4EAiC,aAAc9C,EACdW,QAAS,kBAAMgB,OAAOC,SAASC,KAAK,wDAEpC,kBAAC,IAAD,CAAYnE,UAAU,aACtB,kBAACqF,EAAA,EAAD,CACIrF,UAAW+B,EAAQN,QACnBM,QAAS,CAACJ,MAAOI,EAAQJ,OACzBY,KAAMA,EACNc,SAAUlB,EACVqB,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhBH,QAASjB,EACTgD,qBAAmB,GACnB,kBAACzB,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBAGR,kBAACnB,EAAA,EAAD,CAAMC,MAAI,EAAC5C,UAAW+B,EAAQ,eAC1B,kBAACwD,EAAA,EAAD,CAAOxE,MAAM,YAAY+C,QAAQ,MAAM0B,WAAW,GAC9C,kBAAC,IAAD,CAAmBxF,UAAU,eAGpCyC,MCnKV,SAAS1C,IACpB,OACI,yBAAKC,UAAU,QACX,wBAAIA,UAAU,cAAd,QACA,wBAAIA,UAAU,QACV,0BAAMA,UAAU,aAAhB,qB,wCCFVS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8E,OAAQ,CACJpF,SAAU,SACVqF,WAAY,OACZ,UAAW,CACP3E,MAAO,YAGf4E,eAAgB,CACZ,QAAS,CACLtE,OAAQV,EAAMW,QAAQ,GAAI,EAAG,GAAI,KAGzCG,QAAS,CACLC,cAAe,QAEnBC,MAAO,CACHC,QAASjB,EAAMW,QAAQ,IAE3B,eAAgB,CACZjB,SAAU,QAEd,cAAe,CACXa,QAAS,QAEb0E,SAAU,CACNhF,WAAY,4JACZ,UAAW,CACPG,MAAO,YAGf8E,KAAM,CACFjF,WAAY,4JACZ,UAAW,CACPG,MAAO,YAGf+E,OAAQ,CACJC,OAAQ,oBACRnF,WAAY,4JACZ,UAAW,CACPmF,OAAQ,2BAMdC,EAAwC,CAC1C,WAAc,EACd,KAAQ,EACR,IAAO,EACP,MAAO,EACP,KAAM,EACN,KAAQ,EACR,MAAS,EACT,WAAc,EACd,OAAU,EACV,KAAQ,EACR,MAAS,EACT,UAAW,EACX,UAAW,EACX,WAAY,EACZ,cAAe,EACf,YAAa,EACb,SAAY,EACZ,UAAa,EACb,IAAO,GAWI,SAASC,EAASnE,GAC7B,IAAMC,EAAUtB,IA8DhB,OACI,kBAACyF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBnG,UAAW+B,EAAQ,eAAgBkB,QAAS,kBAAMgB,OAAOC,SAASC,KAAOrC,EAAMsE,MAC3F,kBAACC,EAAA,EAAD,KACI,kBAAC1D,EAAA,EAAD,CAAMrB,QAAS,EAAGwD,WAAS,GACvB,kBAACnC,EAAA,EAAD,CAAMC,MAAI,EAAC0D,UAAU,SAASnF,WAAW,SAAS4D,GAAI,EAAGzD,QAAS,EAAGwD,WAAS,GAC1E,kBAACnC,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACC,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQ+D,OAAQS,IAAKzE,EAAM+D,KAAKC,OAAQhD,IAAKhB,EAAM+D,KAAKW,KAAMvD,QAAS,kBAAMgB,OAAOC,SAASC,KAAOrC,EAAM+D,KAAKO,QAEtI,kBAACzD,EAAA,EAAD,CAAMC,MAAI,KA6Bd,kBAACD,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,GAAI0B,IAAE,EAAC3B,WAAS,GAC3B,kBAACnC,EAAA,EAAD,CAAMC,MAAI,EAAC0D,UAAU,MAAMhF,QAAS,EAAGwD,WAAS,GAC5C,kBAACnC,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,IACX,kBAAClB,EAAA,EAAD,KACI,0BAAM7D,UAAW+B,EAAQ8D,KAAM5C,QAAS,kBAAMgB,OAAOC,SAASC,KAAOrC,EAAM+D,KAAKO,MAAMtE,EAAM+D,KAAKW,MACjG,0BAAMlG,KAAK,MAAMC,aAAW,OAAON,MAAO,CAAE2B,QAAS,QAArD,gBAFJ,aA1Fb,SAAC8E,GAChB,IACMC,EADgBD,EAAKE,MAAM,KACD,GAAGA,MAAM,KACnCC,EAAOF,EAAU,GACjBG,EAAQH,EAAU,GACpBI,EAAY,GACVC,EAAML,EAAU,GAEtB,OAAQG,GACJ,IAAK,KACDC,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MACZ,MACJ,IAAK,KACDA,EAAY,MAGpB,MAAM,GAAN,OAAWA,EAAX,YAAwBC,EAAxB,aAAgCH,GA+COI,CAAWnF,EAAMoF,aAGhC,kBAACvE,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,IACX,kBAAClB,EAAA,EAAD,CAAY7D,UAAW+B,EAAQ0D,OAAQ3B,QAAQ,MAC1ChC,EAAMqF,QAGf,kBAACxE,EAAA,EAAD,CAAM3C,UAAW+B,EAAQ4D,eAAgB/C,MAAI,EAACmC,GAAI,IAC7CjD,EAAMsF,KAAKC,KAAI,SAACC,EAAaC,GAC1B,IAAMC,EAAeF,EAAIG,cACrB1G,EAA6C,UAC7C2G,EAAU1B,EAAWwB,GAQzB,OANgB,IAAZE,EACA3G,EAAQ,YACW,IAAZ2G,IACP3G,EAAQ,WAIR,kBAAC4G,EAAA,EAAD,CACIC,IAAKL,EACLM,MAAOP,EACPvG,MAAOA,EACP+C,QAAQ,WACRgE,KAAK,QACLC,UAAQ,c,iDCtNlDtH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqH,MAAO,CACLC,MAAOtH,EAAMW,QAAQ,GACrBpB,OAAQS,EAAMW,QAAQ,IAExB,iBAAkB,CACdL,SAAU,QAEdwE,OAAQ,CACJyC,YAAa,GAEjB,mBAAoB,CAChBhH,QAAS,OACTC,WAAY,WACZf,eAAgB,UAEpB+H,OAAQ,CACJzC,WAAY,QAEhB,sBAAuB,CACnB,eAAgB,CACZ0C,cAAe,IAGvBC,QAAS,CACL7H,UAAW,OAEf8H,SAAU,CACN1H,WAAY,iJACZ,UAAU,CACNG,MAAO,UACPwH,OAAQ,gBAML,SAASC,IACpB,IAAMzG,EAAUtB,IAEhB,OACI,kBAACyF,EAAA,EAAD,CAAMuC,UAAW,GACb,kBAACpC,EAAA,EAAD,CAAarG,UAAW+B,EAAQ,wBAC5B,kBAAC2G,EAAA,EAAD,CAAY1I,UAAW+B,EAAQ0D,OAAQ0B,MAAM,6BAC7C,kBAACpD,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,4BAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,iCAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,uBAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,sBAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,oBAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,cAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,UAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,WAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,eAGhB,kBAACJ,EAAA,EAAD,CAAUC,gBAAc,GACpB,kBAACC,EAAA,EAAD,CAAgB/I,UAAW+B,EAAQ,mBAC/B,kBAACc,EAAA,EAAD,CAAQ7C,UAAW+B,EAAQiG,MAAOzB,IAAI,MAE1C,kBAACyC,EAAA,EAAD,CAAchJ,UAAW+B,EAAQuG,SAC7BW,QAAQ,mBAGhB,kBAAClF,EAAA,EAAD,CAAS/D,UAAW+B,EAAQsG,QAASM,OAAK,IAC1C,kBAACE,EAAA,EAAD,CAAUC,gBAAc,EAAC9I,UAAW+B,EAAQ,qBACxC,kBAACiC,EAAA,EAAD,CAAQhE,UAAW+B,EAAQoG,OAAQpH,MAAM,UAAUuD,WAAS,EAAC4E,kBAAgB,GAA7E,4B,mEC5HlBzI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8E,OAAQ,CACJyC,YAAa,GAEjB,sBAAuB,CACnB,eAAgB,CACZE,cAAe,IAGvBzC,eAAgB,CACZxF,SAAU,WACV,QAAU,CACNkB,OAAQV,EAAMW,QAAQ,GAAI,EAAG,GAAI,KAGzC6H,WAAY,CACR9H,OAAQV,EAAMW,QAAQ,EAAG,EAAG,MAAO,QAU5B,SAASkH,KACpB,IAAMzG,EAAUtB,KADgB,EAGAuB,mBAAmB,CAC/C,CAAC6F,MAAO,aAAcuB,KAAM,QAC5B,CAACvB,MAAO,OAAQuB,KAAM,QACtB,CAACvB,MAAO,MAAOuB,KAAM,QACrB,CAACvB,MAAO,MAAOuB,KAAM,QACrB,CAACvB,MAAO,KAAMuB,KAAM,QACpB,CAACvB,MAAO,OAAQuB,KAAM,QACtB,CAACvB,MAAO,QAASuB,KAAM,QACvB,CAACvB,MAAO,aAAcuB,KAAM,QAC5B,CAACvB,MAAO,OAAQuB,KAAM,QACtB,CAACvB,MAAO,QAASuB,KAAM,QACvB,CAACvB,MAAO,UAAWuB,KAAM,QACzB,CAACvB,MAAO,UAAWuB,KAAM,QACzB,CAACvB,MAAO,WAAYuB,KAAM,YAC1B,CAACvB,MAAO,cAAeuB,KAAM,YAC7B,CAACvB,MAAO,YAAauB,KAAM,YAC3B,CAACvB,MAAO,WAAYuB,KAAM,YAC1B,CAACvB,MAAO,YAAauB,KAAM,YAC3B,CAACvB,MAAO,MAAOuB,KAAM,cArBO,mBAGzBC,EAHyB,KAGfC,EAHe,KAwBhC,OACI,kBAACpD,EAAA,EAAD,CAAMuC,UAAW,GACb,kBAACpC,EAAA,EAAD,CAAarG,UAAW+B,EAAQ,wBAC5B,kBAAC2G,EAAA,EAAD,CAAY1I,UAAW+B,EAAQ0D,OAAQ0B,MAAM,6BAC7C,kBAACpD,EAAA,EAAD,MACA,kBAAC6E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ4D,eAAgBmD,gBAAc,GACvD,kBAACzE,EAAA,EAAD,CACIkF,GAAG,aACHvJ,UAAW+B,EAAQoH,WACnB5E,YAAY,cACZT,QAAQ,WACRU,WAAY,CACRC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAQ,kBAAC,IAAD,QAErDmD,KAAK,UAERuB,EAAShC,KAAI,SAACmC,EAAMjC,GACjB,IAAIkC,EACA1I,EAA6C,UAE/B,SAAdyI,EAAKJ,MACLK,EAAO,kBAAC,IAAD,MACP1I,EAAQ,aACa,SAAdyI,EAAKJ,KACZK,EAAO,kBAAC,KAAD,MACc,aAAdD,EAAKJ,OACZK,EAAO,kBAAC,KAAD,MACP1I,EAAQ,WAGZ,IAOI2I,EAAsCF,EAAKG,QAAU,WAAa,UAEtE,OACI,kBAAChC,EAAA,EAAD,CACIC,IAAKL,EACLM,MAAO2B,EAAK3B,MACZ4B,KAAMA,EACN3F,QAAS4F,EACT3I,MAAOA,EACPkC,QAhBY,WAChB,IAAI0G,GAAWH,EAAKG,QACdC,EAAW,YAAOP,GACxBO,EAAYrC,GAAOoC,QAAUA,EAC7BL,EAAYM,a,aCzFtCnJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8E,OAAQ,CACJyC,YAAa,GAEjB,mBAAoB,CAChBhH,QAAS,OACTC,WAAY,WACZf,eAAgB,UAEpB+H,OAAQ,CACJzC,WAAY,QAEhB,sBAAuB,CACnB,eAAgB,CACZ0C,cAAe,IAGvB,iBAAkB,CACdH,MAAO,OACPrG,QAAS,MACThB,WAAY,4JACZ,UAAW,CACPE,gBAAiB,2BAGzB,aAAc,CACVc,QAASjB,EAAMW,QAAQ,IAE3BuI,KAAM,CACFC,UAAW,OACX,UAAU,CACN/I,MAAO,gBAMJ,SAASyH,KACpB,IAAMzG,EAAUtB,KAGhB,OACI,kBAACyF,EAAA,EAAD,CAAMuC,UAAW,GACb,kBAACpC,EAAA,EAAD,CAAarG,UAAW+B,EAAQ,wBAC5B,kBAAC2G,EAAA,EAAD,CAAY1I,UAAW+B,EAAQ0D,OAAQ0B,MAAM,0BAC7C,kBAACpD,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACC,EAAA,EAAD,CAAMmB,gBAAc,GAChB,kBAAClB,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,kBAAmBhB,MAAM,WACpD,kBAACiI,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,kBACRgB,UAAU,cAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,mBAC3B,kBAACiH,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,+BACRgB,UAAU,yDAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,mBAC3B,kBAACiH,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,uBACRgB,UAAU,cAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,mBAC3B,kBAACiH,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,4BACRgB,UAAU,iCAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,mBAC3B,kBAACiH,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,+BACRgB,UAAU,qCAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,mBAC3B,kBAACiH,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,iCACRgB,UAAU,4CAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAU7I,UAAW+B,EAAQ,cAAe+G,gBAAc,GACtD,kBAACkB,GAAA,EAAD,CAAYhK,UAAW+B,EAAQ,mBAC3B,kBAACiH,EAAA,EAAD,CAAchJ,UAAW+B,EAAQ8H,KAC7BZ,QAAQ,yBACRgB,UAAU,cAItB,kBAAClG,EAAA,EAAD,CAAS4E,OAAK,IACd,kBAACE,EAAA,EAAD,CAAUC,gBAAc,EAAC9I,UAAW+B,EAAQ,qBACxC,kBAACiC,EAAA,EAAD,CAAQhE,UAAW+B,EAAQoG,OAAQpH,MAAM,UAAUuD,WAAS,EAAC4E,kBAAgB,GAA7E,mB,aC/GlBzI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8E,OAAQ,CACJyC,YAAa,GAEjB,mBAAoB,CAChBhH,QAAS,OACTC,WAAY,WACZf,eAAgB,SAChBwB,QAASjB,EAAMW,QAAQ,OAAQ,EAAG,OAAQ,IAE9C6G,OAAQ,CACJzC,WAAY,QAEhB2C,QAAS,CACLhH,OAAQV,EAAMW,QAAQ,OAAQ,IAElCwD,UAAW,CACPlD,QAAS,OACTd,gBAAiB,eAIV,SAAS0H,KACpB,IAAMzG,EAAUtB,KAEhB,OACI,kBAACyJ,GAAA,EAAD,CAAOzB,UAAW,EAAGzI,UAAW+B,EAAQ+C,WACpC,kBAACjB,EAAA,EAAD,CAAYC,QAAQ,MAAK,0BAAMxD,KAAK,MAAMC,aAAW,WAA5B,UAAzB,oBACA,yBAAKP,UAAW+B,EAAQsG,UACxB,kBAACxE,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BACA,6BACA,kBAAC8E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,gBAAc,GAAxB,2CAGA,kBAACD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,4EAGA,kBAACD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,gGAIJ,6BACA,kBAACjF,EAAA,EAAD,CAAYC,QAAQ,MAApB,mCACA,6BACA,kBAAC8E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,gBAAc,GAAxB,mDAGA,kBAACD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,8BAGA,kBAACD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,iEAIJ,6BACA,kBAACjF,EAAA,EAAD,CAAYC,QAAQ,MAApB,+BACA,6BACA,kBAAC8E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,gBAAc,GAAxB,gHAGA,kBAACD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,kFAGA,kBAACD,EAAA,EAAD,CAAUC,gBAAc,GAAxB,2D,kCClED,SAAS/I,KACpB,OACI,yBAAKC,UAAU,OAAOC,MAAO,CAACC,OAAQ,OAASmB,OAAQ,SACnD,wBAAIrB,UAAU,OAAOC,MAAO,CAACC,OAAQ,SACjC,0BAAMF,UAAU,YAAYC,MAAO,CAACI,SAAU,WAA9C,qB,4CCDVI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwJ,MAAO,CACHjK,OAAQ,SAEZ2J,KAAM,CACFrJ,UAAW,QAEf4J,YAAa,CACTC,MAAO,SAEXC,gBAAiB,CACblK,eAAgB,gBAIT,SAASmK,KACpB,IAAMxI,EAAUtB,KADkB,EAEIuB,mBAAS,SAFb,mBAE3BwI,EAF2B,KAEdC,EAFc,KAQlC,OACI,kBAACvE,EAAA,EAAD,CAAMjG,MAAO,CAACiB,QAAQ,GAAD,OAAIsJ,KACrB,kBAACnE,EAAA,EAAD,KACI,kBAACqE,GAAA,EAAD,CACI1K,UAAW+B,EAAQqI,YACnB7J,aAAW,SACX0C,QAVE,WACdwH,EAAe,UAUH,kBAAC,KAAD,OAGJ,yBAAKxK,MAAO,CAACiB,QAAS,OAAQC,WAAY,WACtC,kBAAC0C,EAAA,EAAD,CAAY7D,UAAW+B,EAAQ8H,KAAM/F,QAAQ,MAA7C,mBACA,kBAAC,GAAD,MACA,kBAACD,EAAA,EAAD,CAAY7D,UAAW+B,EAAQ8H,KAAM/F,QAAQ,MAA7C,eAGJ,kBAACD,EAAA,EAAD,4FAEJ,kBAAC8G,GAAA,EAAD,CACQ3K,UAAW+B,EAAQoI,MACnBA,MAAOS,KACP3H,QAAS,kBAAMgB,OAAOC,SAASC,KAAK,yDAE5C,kBAAC0G,GAAA,EAAD,CAAa7K,UAAW+B,EAAQuI,iBAC5B,kBAACtG,EAAA,EAAD,CAAQF,QAAQ,YAAY/C,MAAM,UAAU+G,KAAK,QAAQ7E,QAAS,kBAAMgB,OAAOC,SAASC,KAAK,wDAA7F,2B,+BClDD,OAAI2G,EAHCC,EAAQ,IAApBD,SCEFE,GAAa,CACfC,MAAO,cACPC,KAAM,SAGJC,G,WAMF,WAAY3B,GAAY,0BALxB4B,MAAa,KAKU,KAJvBC,MAAgB,GAIO,KAHvBC,YAAsB,GAGC,KAFvBC,gBAA0B,GAGtB,IAAMC,EAAQhC,EAAKiC,KAAK7E,MAAM,MACT,IAAjB4E,EAAME,SAGVC,KAAKP,MAAQ5B,EACbmC,KAAKN,MAAQG,EAAM,GACnBG,KAAKL,YAAcE,EAAM,GACzBG,KAAKJ,gBAAkBK,KAAKJ,EAAM,K,gDAIlC,OAAOG,KAAKP,MAAM7B,K,0BAIlB,OAAOoC,KAAKP,MAAMhF,M,6BAIlB,OAAOuF,KAAKP,MAAMS,OAAOxE,KAAI,SAACQ,GAAD,OAAeA,EAAMrB,U,2BAIlD,OAAOmF,KAAKN,Q,6BAIZ,OAAOM,KAAKP,MAAMvF,KAAKiG,a,+BAIvB,OAAOH,KAAKP,MAAMvF,KAAKkG,W,iCAIvB,OAAOJ,KAAKL,c,qCAIZ,OAAOK,KAAKJ,kB,iCAIZ,OAAOI,KAAKP,MAAMY,e,KAILC,G,kDACjBC,OAAkC,G,kMAEtBL,E,+BAAmB,G,SACJM,GAAQD,OAAOE,YAAf,6BAChBpB,IADgB,IAEnBqB,MAAO,OACPR,SACAS,KAAM,UACNhG,UAAW,U,OAGf,I,SARQkD,E,EAAAA,KAOF+C,EAAgB,GACbC,EAAI,EAAGA,IAAMhD,EAAKkC,SAAUc,EAEf,QADZC,EAAM,IAAItB,GAAM3B,EAAKgD,KACnBpB,QACJO,KAAKO,OAAOO,EAAIlD,IAAMkD,EACtBF,EAAIG,KAAKD,EAAIlD,K,yBAGdgD,G,gIAGPhD,GACA,OAAOoC,KAAKO,OAAO3C,O,KCxErB9I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC,mBAAoB,CAClBU,OAAQV,EAAMW,QAAQ,GAAI,OAAQ,EAAG,SAEvCqL,KAAM,CACJzL,QAAS,OACTd,eAAgB,cAId8L,GAAS,IAAID,GAuFJW,OArFf,WACE,IAAM7K,EAAUtB,KADH,EAEIuB,mBAAmB,IAA7B6J,EAFM,sBAGmB7J,mBAAmB,IAHtC,mBAGN6K,EAHM,KAGIC,EAHJ,KAKbC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,sEACAd,GAAOe,MAAMpB,GADb,OACZU,EADY,OAElBO,EAAYP,GAFM,2CAAH,qDAKjBW,KACC,CAACrB,IAGJ,IADA,IAAMsB,EAAuB,GACpBX,EAAI,EAAGA,IAAMK,EAASnB,SAAUc,EAAG,CAC1C,IAAMY,EAAQlB,GAAOmB,IAAIR,EAASL,IAClCc,QAAQC,IAAIH,GACPA,GAGLD,EAAMT,KACJ,kBAAC/J,EAAA,EAAD,CAAMC,MAAI,EAACgF,IAAK4E,GACd,kBAACvG,EAAD,CACEkB,MAAK,OAAEiG,QAAF,IAAEA,OAAF,EAAEA,EAAOI,eACdpH,IAAKgH,EAAMK,WACXrG,KAAMgG,EAAMvB,OACZhG,KAAM,CACJC,OAAQsH,EAAMtH,OACdU,KAAM4G,EAAMvH,KACZO,IAAKgH,EAAMM,UAEbxG,UAAWkG,EAAMpB,eAMzB,OACE,6BACE,kBAACnK,EAAD,CAAQa,cAAc,IACtB,kBAACiL,EAAA,EAAD,CAAW3N,UAAW+B,EAAQ,oBAAqB6L,SAAS,MAC1D,kBAACjL,EAAA,EAAD,CAAMkL,KAAK,SAAS1M,WAAW,aAAaG,QAAS,EAAGwD,WAAS,GAC/D,kBAACnC,EAAA,EAAD,CAAMC,MAAI,EAAC0D,UAAU,SAASvB,GAAI,EAAGzD,QAAS,EAAGwD,WAAS,GACxD,kBAACnC,EAAA,EAAD,CAAMC,MAAI,GACR,yBAAK5C,UAAW+B,EAAQ4K,MACtB,kBAAC,EAAD,QAGJ,kBAAChK,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,QAIJ,kBAACD,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,EAAGzD,QAAS,EAAGgF,UAAU,SAASuH,KAAK,SAAS/I,WAAS,GACtE,kBAACnC,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,IACb,kBAACwF,GAAD,OAGF,kBAAC5H,EAAA,EAAD,CAAMC,MAAI,EAACmC,GAAI,GAAIC,QAAQ,gBAAgB1D,QAAS,EAAGwD,WAAS,GAC9D,kBAACnC,EAAA,EAAD,CAAMC,MAAI,EAAC0D,UAAU,MAAMvB,GAAI,EAAGzD,QAAS,EAAGwM,aAAa,aAAahJ,WAAS,GAC9EqI,GAGH,kBAACxK,EAAA,EAAD,CAAMC,MAAI,EAAC0D,UAAU,SAASvB,GAAI,EAAGzD,QAAS,EAAGwD,WAAS,GACxD,kBAACnC,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,EAAD,OAEF,kBAACD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,cC5FH,SAASmL,KAEtB,OACE,6BACE,kBAAClM,EAAD,CAAQa,cAAc,IACtB,kBAACsB,EAAA,EAAD,CAAQF,QAAQ,YAAY/C,MAAM,UAAU+G,KAAK,QAAQ7E,QAAS,kBAAMgB,OAAOC,SAASC,KAAK,4EAA7F,wBCQSyI,OAbf,WAAgB,IAAD,EACU5K,oBAAS,GAE1BgM,EAHO,oBAGsB,kBAACC,GAAD,MAAW,kBAACF,GAAD,MAE9C,OACE,6BACGC,ICNPE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U,wCCT1BC,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.2069de0a.chunk.js","sourcesContent":["import React from 'react';\nimport './logo.sass';\n\nexport default function Logo(){\n    return(\n        <div className='logo' style={{height: 'auto', flexFlow: 'row nowrap', justifyContent: 'center'}}>\n            <h2 className='color-text' style={{fontSize: '30px'}}><span role=\"img\" aria-label=\"eyes\">👀</span></h2>\n            <h2 className='color-text' style={{fontSize: '40px', marginTop: '5px'}}>MEEP</h2>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { AppBar, Toolbar, TextField, InputAdornment, Avatar, Badge, makeStyles, Grid, Menu, MenuItem, Divider, Typography, Button, Popover } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Icon from './Logo/icon';\n\nconst useStyles = makeStyles((theme) => ({\n    \"icon-hover\": {\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"50%\",\n        \"&:hover\" : {\n            backgroundColor: \"#f5f5f5\",\n            \"& > *\" : {\n                color: \"#3f51b5\"\n            }\n        }\n    },\n    menu: {\n        marginTop: \"70px\",\n    },\n    \"menu-item\":{\n        minWidth: \"200px\",\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(63, 81, 181, .05)\",\n        }\n    },\n    \"MuiMenuItem-root\": {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        alignItems: \"flex-start\"\n    },\n    signUpButton:{\n        margin: theme.spacing(0, .5),\n    },\n    loginButton:{\n        margin: theme.spacing(0, .5),\n        color: \"white\",\n        borderColor: \"white\"\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(0, 1),\n    },\n}));\n\nexport default function NavBar (props: {isUserActive: boolean}){\n    const classes = useStyles();\n    const [anchorMenu, setAnchorMenu] = useState(null);\n    const [anchorIcon, setAnchorIcon] = useState(null);\n\n    const handleClick = (event: any) => {\n        setAnchorMenu(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorMenu(null);\n    };\n\n    const handlePopoverOpen = (event : any) => {\n        setAnchorIcon(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n        setAnchorIcon(null);\n    };\n\n    const open = Boolean(anchorIcon);\n\n    const displayUserActions = props.isUserActive ? \n        <Grid item>\n            <Avatar alt=\"username\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}/>\n            <Menu\n                className={classes.menu}\n                anchorEl={anchorMenu}\n                keepMounted\n                open={Boolean(anchorMenu)}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuItem className={classes[\"MuiMenuItem-root\"]} onClick={handleClose}>\n                    <Typography variant=\"h6\" >Duchess-Toffee</Typography>\n                    <Typography>100 pts</Typography>\n                </MenuItem>\n                <Divider/>\n                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>Messages</MenuItem>\n                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>My Posts</MenuItem>\n                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>Settings</MenuItem>\n                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>Logout</MenuItem>\n            </Menu>\n        </Grid>\n        :\n        <Grid item>\n            <Button variant=\"outlined\" className={classes.loginButton} onClick={() => window.location.href=\"https://github.com/login/oauth/authorize?client_id=ac67cef96ff2922c4a3c\"}>Login</Button>\n            <Button variant=\"contained\" color=\"secondary\" className={classes.signUpButton}  onClick={() => window.location.href=\"https://github.com/login/oauth/authorize?client_id=ac67cef96ff2922c4a3c\"}>Sign Up</Button>\n        </Grid>\n\n    const displaySearchBar = props.isUserActive ?\n        <TextField \n            fullWidth\n            placeholder=\"Search...\"\n            variant=\"outlined\"\n            InputProps={{\n                startAdornment: (\n                    <InputAdornment position=\"start\">\n                        <SearchIcon />\n                    </InputAdornment>\n                )\n            }}\n        />\n        :\n        null\n\n    return (\n        <AppBar>\n            <Toolbar>\n                <Grid container alignItems=\"center\" spacing={0}>\n                    <Grid item xs={3}>\n                        <Icon />\n                    </Grid>\n                    <Grid item xs={6}>\n                        {displaySearchBar}\n                    </Grid>                    \n                    <Grid item xs={3} container alignItems=\"center\" justify=\"flex-end\" spacing={3}>\n                        <Grid item className={classes[\"icon-hover\"]}\n                            aria-owns={open ? 'mouse-over-popover' : undefined}\n                            aria-haspopup=\"true\"\n                            color=\"secondary\"\n                            onMouseEnter={handlePopoverOpen}\n                            onMouseLeave={handlePopoverClose}\n                            onClick={() => window.location.href=\"https://github.com/marketplace/actions/meep-scanner\"}\n                            >\n                            <GitHubIcon className=\"nav-icon\" />\n                            <Popover\n                                className={classes.popover}\n                                classes={{paper: classes.paper}}\n                                open={open}\n                                anchorEl={anchorIcon}\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'center',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                }}\n                                onClose={handlePopoverClose}\n                                disableRestoreFocus>\n                                <Typography variant=\"caption\">GitHub Store Page</Typography>\n                            </Popover>\n                        </Grid>\n                        <Grid item className={classes[\"icon-hover\"]}>\n                            <Badge color=\"secondary\" variant=\"dot\" invisible={false}>\n                                <NotificationsIcon className=\"nav-icon\" />\n                            </Badge>\n                        </Grid>                        \n                        {displayUserActions}\n                    </Grid>\n                </Grid>\n                \n            </Toolbar>\n        </AppBar>\n    )\n}","import React from 'react';\nimport './logo.sass';\n\nexport default function Logo(){\n    return(\n        <div className='logo'>\n            <h2 className='color-text'>MEEP</h2>\n            <h1 className='name'>\n                <mark className='highlight'>more eyes, plz!</mark>\n            </h1>        \n        </div>\n    )\n}","import React from 'react';\nimport { Typography, Grid, Card, CardContent, Chip, makeStyles, Avatar, CardActionArea } from '@material-ui/core';\n// import { Popover } from '@material-ui/core';\n// import CommentIcon from '@material-ui/icons/Comment';\n// import DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        fontSize: \"1.5rem\",\n        fontWeight: \"bold\",\n        \"&:hover\": {\n            color: \"#3f51b5\",\n        }\n    },\n    labelContainer: {\n        '& > *': {\n            margin: theme.spacing(.5, 1, .5, 0),\n        }\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    \"popover-text\": {\n        fontSize: \"12px\",\n    },\n    \"card-action\": {\n        display: \"flex\",\n    },\n    comments: {\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        '&:hover': {\n            color: \"#f50057\",\n        }\n    },\n    user: {\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\": {\n            color: \"#f50057\",\n        }\n    },\n    avatar: {\n        border: \"1px solid #bdbdbd\",\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\": {\n            border: \" 1px solid #f50057\"\n        }\n    }\n})\n);\n\nconst TagMapping: { [key: string]: number } = {\n    \"javascript\": 0,\n    \"html\": 0,\n    \"css\": 0,\n    \"c++\": 1,\n    \"c#\": 1,\n    \"java\": 1,\n    \"react\": 1,\n    \"typeScript\": 1,\n    \"github\": 1,\n    \"sass\": 1,\n    \"unity\": 1,\n    \"node.js\": 1,\n    \"web dev\": 2,\n    \"game dev\": 2,\n    \"mobile apps\": 2,\n    \"ui design\": 2,\n    \"graphics\": 2,\n    \"benchmark\": 2,\n    \"api\": 2\n}\n\ninterface MeepRequestProps {\n    title: string,\n    url: string,\n    tags: string[],\n    user: { avatar: string, name: string, url: string },\n    createdAt: string\n};\n\nexport default function ListCard(props: MeepRequestProps) {\n    const classes = useStyles();\n    // const [anchorEl, setAnchorEl] = useState(null);\n\n    // const handlePopoverOpen = (event : any) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    // const handlePopoverClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    // const open = Boolean(anchorEl);\n\n    const formatDate = (date: string) => {\n        const dateTimeSplit = date.split('T');\n        const dateSplit = dateTimeSplit[0].split('-');\n        const year = dateSplit[0];\n        const month = dateSplit[1];\n        let monthAbbr = \"\"\n        const day = dateSplit[2];\n\n        switch (month) {\n            case \"01\":\n                monthAbbr = \"Jan\";\n                break;\n            case \"02\":\n                monthAbbr = \"Feb\";\n                break;\n            case \"03\":\n                monthAbbr = \"Mar\";\n                break;\n            case \"04\":\n                monthAbbr = \"Apr\";\n                break;\n            case \"05\":\n                monthAbbr = \"May\";\n                break;\n            case \"06\":\n                monthAbbr = \"Jun\";\n                break;\n            case \"07\":\n                monthAbbr = \"Jul\";\n                break;\n            case \"08\":\n                monthAbbr = \"Aug\";\n                break;\n            case \"09\":\n                monthAbbr = \"Sep\";\n                break;\n            case \"10\":\n                monthAbbr = \"Oct\";\n                break;\n            case \"11\":\n                monthAbbr = \"Nov\";\n                break;\n            case \"12\":\n                monthAbbr = \"Dec\";\n                break;\n        }\n        return (`${monthAbbr} ${day}, ${year}`);\n    }\n\n    return (\n        <Card>\n            <CardActionArea className={classes['card-action']} onClick={() => window.location.href = props.url}>\n                <CardContent>\n                    <Grid spacing={8} container>\n                        <Grid item direction=\"column\" alignItems=\"center\" xs={1} spacing={1} container>\n                            <Grid item>\n                                <Avatar className={classes.avatar} src={props.user.avatar} alt={props.user.name} onClick={() => window.location.href = props.user.url} />\n                            </Grid>\n                            <Grid item>\n                                {/* <DoneIcon \n                                        aria-owns={open ? 'mouse-over-popover' : undefined}\n                                        aria-haspopup=\"true\"\n                                        color=\"secondary\"\n                                        onMouseEnter={handlePopoverOpen}\n                                        onMouseLeave={handlePopoverClose}/>\n                                    <Popover \n                                        id=\"mouse-over-popover\"\n                                        className={classes.popover}\n                                        classes={{\n                                        paper: classes.paper,\n                                        }}\n                                        open={open}\n                                        anchorEl={anchorEl}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'center',\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'center',\n                                        }}\n                                        onClose={handlePopoverClose}\n                                        disableRestoreFocus>\n                                        <Typography className={classes['popover-text']}>Feedback already provided!</Typography>\n                                    </Popover> */}\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={11} sm container>\n                            <Grid item direction=\"row\" spacing={2} container>\n                                <Grid item xs={12}>\n                                    <Typography>\n                                        <span className={classes.user} onClick={() => window.location.href = props.user.url}>{props.user.name}</span>\n                                        <span role=\"img\" aria-label=\"eyes\" style={{ padding: \"6px\" }}>👀</span>\n                                    meeped on {formatDate(props.createdAt)}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography className={classes.header} variant=\"h5\">\n                                        {props.title}\n                                    </Typography>\n                                </Grid>\n                                <Grid className={classes.labelContainer} item xs={12}>\n                                    {props.tags.map((tag: string, index: number) => {\n                                        const tagLowerCase = tag.toLowerCase();\n                                        let color: \"default\" | \"primary\" | \"secondary\" = \"default\";\n                                        let dataMap = TagMapping[tagLowerCase];\n\n                                        if (dataMap === 0) {\n                                            color = \"secondary\";\n                                        } else if (dataMap === 2) {\n                                            color = \"primary\";\n                                        }\n\n                                        return (\n                                            <Chip\n                                                key={index}\n                                                label={tag}\n                                                color={color}\n                                                variant=\"outlined\"\n                                                size=\"small\"\n                                                disabled\n                                            />\n                                        )\n                                    })}\n                                </Grid>\n                                {/* <Grid className={classes.comments} item xs={12} spacing={1} container>\n                                        <Grid item>\n                                            <CommentIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography>15 comments</Typography>\n                                        </Grid>\n                                    </Grid> */}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}","import React from 'react';\nimport { Button, Card, CardContent, CardHeader, List, ListItem, ListItemText, ListItemAvatar, Avatar, makeStyles, Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    'avatar-spacing': {\n        minWidth: \"30px\",\n    },\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end', \n        justifyContent: \"center\",\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    \"MuiCardContent-root\": {\n        '&:last-child' :{\n            paddingBottom: 0,\n        }  \n    },\n    divider: {\n        marginTop: \"8px\",\n    },\n    username: {\n        transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\":{\n            color: \"#f50057\",\n            cursor: \"pointer\",\n        }\n    }\n}));\n\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n    return(\n        <Card elevation={0}>\n            <CardContent className={classes[\"MuiCardContent-root\"]}>\n                <CardHeader className={classes.header} title=\"🏆 Leaderboard\"/>\n                <Divider light/>\n                <List>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"jeremyong 🥇\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"duchess-toffee 🥈\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Elmo 🥉\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Oscar the Grouch\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Cookie Monster\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Big Bird\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Bert\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Ernie\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"The Count\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Snuffleupagus\"\n                        />\n                    </ListItem>\n                    <Divider className={classes.divider} light/>\n                    <ListItem disableGutters className={classes[\"button-container\"]}>\n                        <Button className={classes.button} color=\"primary\" fullWidth disableElevation>See Full Leaderboard</Button>\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    )\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, List, ListItem, Chip, makeStyles, Divider, TextField, InputAdornment } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BuildIcon from '@material-ui/icons/BuildOutlined';\nimport Star from '@material-ui/icons/StarBorderOutlined';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: 0,\n    },\n    \"MuiCardContent-root\": {\n        '&:last-child' :{\n            paddingBottom: 0,\n        }  \n    },\n    labelContainer: {\n        flexFlow: \"row wrap\",\n        '& > *' : {\n            margin: theme.spacing(.5, 1, .5, 0),\n        }\n    },\n    searchTags: {\n        margin: theme.spacing(0, 0, \"8px\", 0)\n    }\n}));\n\ninterface Filter {\n    label: string,\n    type: \"lang\" | \"tool\" | \"category\",\n    enabled?: boolean\n}\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n    const [chipData, setChipData] = useState<Filter[]>([\n        {label: \"JavaScript\", type: \"lang\"},\n        {label: \"HTML\", type: \"lang\"},\n        {label: \"CSS\", type: \"lang\"},\n        {label: \"C++\", type: \"lang\"},\n        {label: \"C#\", type: \"lang\"},\n        {label: \"Java\", type: \"lang\"},\n        {label: \"React\", type: \"tool\"},\n        {label: \"TypeScript\", type: \"tool\"},\n        {label: \"Sass\", type: \"tool\"},\n        {label: \"Unity\", type: \"tool\"},\n        {label: \"Node.JS\", type: \"tool\"},\n        {label: \"Web Dev\", type: \"tool\"},\n        {label: \"Game Dev\", type: \"category\"},\n        {label: \"Mobile Apps\", type: \"category\"},\n        {label: \"UI Design\", type: \"category\"},\n        {label: \"Graphics\", type: \"category\"},\n        {label: \"Benchmark\", type: \"category\"},\n        {label: \"API\", type: \"category\"}\n    ]);\n\n    return (\n        <Card elevation={0}>\n            <CardContent className={classes[\"MuiCardContent-root\"]}>\n                <CardHeader className={classes.header} title=\"🔖 Tags/Filter\"/>\n                <Divider/>\n                <List>\n                    <ListItem className={classes.labelContainer} disableGutters>\n                        <TextField\n                            id=\"tag-search\" \n                            className={classes.searchTags}\n                            placeholder=\"Search Tags\" \n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>\n                            }}\n                            size=\"small\"\n                        />\n                        {chipData.map((data, index) => {\n                            let icon;\n                            let color: \"default\" | \"primary\" | \"secondary\" = \"default\";\n\n                            if (data.type === \"lang\"){\n                                icon = <CodeIcon />\n                                color = \"secondary\"\n                            } else if (data.type === \"tool\"){\n                                icon = <BuildIcon />\n                            } else if (data.type === \"category\") {\n                                icon = <Star />\n                                color = \"primary\"\n                            }\n\n                            const handleClick = () => {\n                                let enabled = !data.enabled\n                                const newChipData = [...chipData];\n                                newChipData[index].enabled = enabled;\n                                setChipData(newChipData);\n                            }\n\n                            let chipVariant: \"default\" | \"outlined\" = data.enabled ? \"outlined\" : \"default\";\n\n                            return (\n                                <Chip\n                                    key={index}\n                                    label={data.label}\n                                    icon={icon}\n                                    variant={chipVariant}\n                                    color={color}\n                                    onClick={handleClick}\n                                />\n                            )\n                        })}\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { Button, ButtonBase, Card, CardHeader, CardContent, List, ListItem, ListItemText, Divider, makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end', \n        justifyContent: \"center\",\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    \"MuiCardContent-root\": {\n        '&:last-child' :{\n            paddingBottom: 0,\n        }  \n    },\n    \"message-button\": {\n        width: \"100%\",\n        padding: \"8px\",\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(63, 81, 181, .05)\",\n        }\n    },\n    \"no-padding\": {\n        padding: theme.spacing(0),\n    },\n    text: {\n        textAlign: \"left\",\n        \"&:hover\":{\n            color: \"#3f51b5\"\n        }\n    }\n}));\n\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n\n    return(\n        <Card elevation={0}>\n            <CardContent className={classes[\"MuiCardContent-root\"]}>\n                <CardHeader className={classes.header} title=\"📮 Messages\"/>\n                <Divider light/>\n                <List disablePadding>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]} color=\"primary\">\n                            <ListItemText className={classes.text}\n                                primary=\"Sparkles ✨\"\n                                secondary=\" (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"You're on Fire! 🔥\"\n                                secondary=\"Commented on 5+ posts in the last 24 hours. (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Unicorn 🦄\"\n                                secondary=\" (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Many Thanks! 🙌\"\n                                secondary=\"You've been thanked! (+5p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Key to Success! 🔑\"\n                                secondary=\"Requested help 10 times. (+5p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"You Got Comments! 👀\"\n                                secondary=\"Someone has commented on your commit.\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Congrats! 🎉\"\n                                secondary=\" (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem disableGutters className={classes[\"button-container\"]}>\n                        <Button className={classes.button} color=\"primary\" fullWidth disableElevation>Go to Inbox</Button>\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { Typography, Paper, List, ListItem, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end',\n        justifyContent: \"center\",\n        padding: theme.spacing(\"16px\", 0, \"16px\", 0),\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    divider: {\n        margin: theme.spacing(\"28px\", 0),\n    },\n    container: {\n        padding: \"16px\",\n        backgroundColor: \"#f5f5f5\",\n    }\n}));\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={0} className={classes.container}>\n            <Typography variant=\"h5\"><span role=\"img\" aria-label=\"sparkle\">✨</span> Code of Conduct</Typography>\n            <div className={classes.divider}></div>\n            <Typography variant=\"h6\">Offering a set of eyes?</Typography>\n            <br />\n            <List>\n                <ListItem disableGutters>\n                    1. Offer feedback and advice graciously\n                </ListItem>\n                <ListItem disableGutters>\n                    2. Give justifications for why something should be done a particular way\n                </ListItem>\n                <ListItem disableGutters>\n                    3. Exhibit patience and remember that asking for help is in and of itself an act of courage\n                </ListItem>\n            </List>\n            <br />\n            <Typography variant=\"h6\">Requesting another set of eyes?</Typography>\n            <br />\n            <List>\n                <ListItem disableGutters>\n                    1. Respect the time of people offering feedback\n                </ListItem>\n                <ListItem disableGutters>\n                    2. Avoid getting defensive\n                </ListItem>\n                <ListItem disableGutters>\n                    3. Understand that those giving you feedback are not perfect\n                </ListItem>\n            </List>\n            <br />\n            <Typography variant=\"h6\">General Commit Thread Rules</Typography>\n            <br />\n            <List>\n                <ListItem disableGutters>\n                    1. Refrain from posting any content that is NSFW, racist, profane, or discriminatory toward any people group\n                </ListItem>\n                <ListItem disableGutters>\n                    2. Avoid posting any personal or identifying information of yourself or others\n                </ListItem>\n                <ListItem disableGutters>\n                    3. Do not post any recruitment messages, spam, or ads\n                </ListItem>\n            </List>\n        </Paper>\n    )\n}","import React from 'react';\nimport './logo.sass';\n\nexport default function Logo(){\n    return(\n        <div className='logo' style={{height: \"auto\",  margin: \"10px\"}}>\n            <h1 className='name' style={{height: \"atuo\"}}>\n                <mark className='highlight' style={{fontSize: \"1.5rem\"}}>more eyes, plz!</mark>\n            </h1>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardMedia, CardActions, Button, makeStyles, Typography, IconButton } from '@material-ui/core';\nimport Meep from './Logo/more-eyes-plz';\nimport GitHubImage from '../assets/github-actions.jpg';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        height: '260px',\n    },\n    text: {\n        marginTop: '10px'\n    },\n    closeButton: {\n        float: \"right\"\n    },\n    buttonContainer: {\n        justifyContent: \"flex-end\"\n    }\n}))\n\nexport default function WelcomeCard (){\n    const classes = useStyles();\n    const [displayCard, setDisplayCard] = useState(\"block\")\n\n    const closeCard = () => {\n        setDisplayCard(\"none\");\n    }\n\n    return(\n        <Card style={{display:`${displayCard}`}}>\n            <CardContent>\n                <IconButton \n                    className={classes.closeButton}\n                    aria-label=\"delete\"\n                    onClick={closeCard}>\n                    <CloseIcon />\n                </IconButton>\n                \n                <div style={{display: \"flex\", alignItems: \"center\"}}>\n                    <Typography className={classes.text} variant=\"h5\">Welcome to the </Typography>\n                    <Meep/>\n                    <Typography className={classes.text} variant=\"h5\">community!</Typography>\n                </div>\n                \n                <Typography>Start getting more eyes on your code by adding MEEP Scanner from the GitHub store.</Typography>                \n            </CardContent>\n            <CardMedia\n                    className={classes.image}\n                    image={GitHubImage}\n                    onClick={() => window.location.href=\"https://github.com/marketplace/actions/meep-scanner\"}\n                />\n            <CardActions className={classes.buttonContainer}>\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => window.location.href=\"https://github.com/marketplace/actions/meep-scanner\"}>Our GitHub Store Page</Button>\n            </CardActions>\n        </Card>\n    )\n}","const { Octokit } = require('@octokit/rest');\n\n// All API queries are made with the same octokit instance\nexport default new Octokit();","import octokit from './octokit';\n\nconst MEEPS_REPO = {\n    owner: 'moreeyesplz',\n    repo: 'meeps'\n};\n\nclass Issue {\n    data_: any = null;\n    user_: string = '';\n    commit_url_: string = '';\n    commit_message_: string = '';\n\n    constructor(data: any) {\n        const lines = data.body.split('\\n');\n        if (lines.length !== 3) {\n            return;\n        }\n        this.data_ = data;\n        this.user_ = lines[0];\n        this.commit_url_ = lines[1];\n        this.commit_message_ = atob(lines[2]);\n    }\n\n    get id(): number {\n        return this.data_.id;\n    }\n\n    get url(): string {\n        return this.data_.url;\n    }\n\n    get labels(): string[] {\n        return this.data_.labels.map((label:any) => label.name);\n    }\n\n    get user(): string {\n        return this.user_;\n    }\n\n    get avatar(): string {\n        return this.data_.user.avatar_url;\n    }\n\n    get user_url(): string {\n        return this.data_.user.html_url;\n    }\n\n    get commit_url(): string {\n        return this.commit_url_;\n    }\n\n    get commit_message(): string {\n        return this.commit_message_;\n    }\n\n    get created_at(): string {\n        return this.data_.created_at;\n    }\n}\n\nexport default class Issues {\n    issues: { [id: number]: Issue } = {};\n\n    async fetch(labels: string[] = []) {\n        const { data } = await octokit.issues.listForRepo({\n            ...MEEPS_REPO,\n            state: 'open',\n            labels,\n            sort: 'created',\n            direction: 'desc',\n        });\n        const ids: number[] = [];\n        for (let i = 0; i !== data.length; ++i) {\n            const iss = new Issue(data[i]);\n            if (iss.data_ !== null) {\n                this.issues[iss.id] = iss;\n                ids.push(iss.id);\n            }\n        }\n        return ids;\n    }\n\n    get(id: number): Issue | null {\n        return this.issues[id];\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { Container, Grid, makeStyles } from '@material-ui/core';\nimport NavBar from './components/nav-bar';\nimport Logo from './components/Logo/logo';\nimport ListCard from './components/list-card';\nimport Leaderboard from './components/leaderboard';\nimport Filters from './components/filters';\nimport Messages from './components/message-feed';\nimport Conduct from './components/code-of-conduct';\nimport WelcomeCard from './components/welcome-card';\nimport Issues from './models/issues';\n\nconst useStyles = makeStyles((theme) => ({\n  'center-container': {\n    margin: theme.spacing(15, 'auto', 0, 'auto'),\n  },\n  logo: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nconst issues = new Issues();\n\nfunction App() {\n  const classes = useStyles();\n  const [labels] = useState<string[]>([]);\n  const [issueIds, setIssueIds] = useState<number[]>([]);\n\n  useEffect(() => {\n    const fetchIssues = async () => {\n      const ids = await issues.fetch(labels);\n      setIssueIds(ids);\n    };\n\n    fetchIssues();\n  }, [labels]);\n\n  const cards: JSX.Element[] = [];\n  for (let i = 0; i !== issueIds.length; ++i) {\n    const issue = issues.get(issueIds[i]);\n    console.log(issue);\n    if (!issue) {\n      continue;\n    }\n    cards.push(\n      <Grid item key={i}>\n        <ListCard\n          title={issue?.commit_message}\n          url={issue.commit_url}\n          tags={issue.labels}\n          user={{\n            avatar: issue.avatar,\n            name: issue.user,\n            url: issue.user_url\n          }}\n          createdAt={issue.created_at}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <div>\n      <NavBar isUserActive={true} />\n      <Container className={classes['center-container']} maxWidth='lg'>\n        <Grid wrap=\"nowrap\" alignItems=\"flex-start\" spacing={3} container>\n          <Grid item direction=\"column\" xs={3} spacing={2} container>\n            <Grid item>\n              <div className={classes.logo}>\n                <Logo />\n              </div>\n            </Grid>\n            <Grid item>\n              <Filters />\n            </Grid>\n            <Grid item>\n              <Conduct />\n            </Grid>\n          </Grid>\n\n          <Grid item xs={9} spacing={2} direction=\"column\" wrap=\"nowrap\" container>\n            <Grid item xs={12}>\n              <WelcomeCard />\n            </Grid>\n\n            <Grid item xs={12} justify=\"space-between\" spacing={0} container>\n              <Grid item direction=\"row\" xs={8} spacing={1} alignContent=\"flex-start\" container>\n                {cards}\n              </Grid>\n\n              <Grid item direction=\"column\" xs={4} spacing={2} container>\n                <Grid item>\n                  <Leaderboard />\n                </Grid>\n                <Grid item>\n                  <Messages />\n                </Grid>\n              </Grid>\n            </Grid>\n\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport NavBar from './components/nav-bar';\n\nexport default function Login() {\n\n  return (\n    <div>\n      <NavBar isUserActive={false} />\n      <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => window.location.href=\"https://github.com/login/oauth/authorize?client_id=ac67cef96ff2922c4a3c\"}>Sign Up with GitHub</Button>\n    </div>\n\n  );\n}","import React, { useState } from 'react';\nimport Main from \"./Main\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const [isUserOnline] = useState(false);\n\n  const displayPage = isUserOnline ? <Main /> : <Login />;\n\n  return (\n    <div>\n      {displayPage}\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/github-actions.059fe3bf.jpg\";"],"sourceRoot":""}