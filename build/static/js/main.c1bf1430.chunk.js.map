{"version":3,"sources":["components/Logo/icon.tsx","components/nav-bar.tsx","components/Logo/logo.tsx","components/list-card.tsx","components/leaderboard.tsx","components/filters.tsx","components/message-feed.tsx","components/code-of-conduct.tsx","components/sign-up-card.tsx","models/octokit.ts","models/issues.ts","App.tsx","index.tsx"],"names":["Logo","className","style","height","flexFlow","justifyContent","fontSize","marginTop","useStyles","makeStyles","theme","transition","borderRadius","backgroundColor","menu","minWidth","display","alignItems","NavBar","classes","React","useState","anchorEl","setAnchorEl","handleClose","AppBar","Toolbar","Grid","container","spacing","item","xs","TextField","fullWidth","placeholder","variant","InputProps","startAdornment","InputAdornment","position","justify","Badge","color","invisible","Button","Avatar","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Typography","Divider","header","fontWeight","labelContainer","margin","popover","pointerEvents","paper","padding","comments","ListCard","handlePopoverClose","console","log","Card","CardActionArea","CardContent","direction","aria-owns","undefined","onMouseEnter","onMouseLeave","Popover","id","disableRestoreFocus","sm","Chip","size","disabled","label","small","width","paddingLeft","button","paddingBottom","divider","username","cursor","UserStats","CardHeader","title","light","List","ListItem","disableGutters","ListItemAvatar","src","ListItemText","primary","disableElevation","text","textAlign","disablePadding","ButtonBase","secondary","Paper","elevation","subheader","CardMedia","image","CardActions","Octokit","require","MEEPS_REPO","owner","repo","Issue","data","data_","user_","commit_url_","commit_message_","lines","body","split","length","this","atob","url","labels","user","Issues","issues","octokit","listForRepo","state","sort","ids","i","iss","push","logo","App","issueIds","setIssueIds","useEffect","a","fetch","fetchIssues","cards","issue","get","key","Container","maxWidth","alignContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1bf1430.chunk.js","sourcesContent":["import React from 'react';\nimport './logo.sass';\n\nexport default function Logo(){\n    return(\n        <div className='logo' style={{height: 'auto', flexFlow: 'row nowrap', justifyContent: 'center'}}>\n            <h2 className='color-text' style={{fontSize: '30px'}}>👀</h2>\n            <h2 className='color-text' style={{fontSize: '40px', marginTop: '5px'}}>MEEP</h2>\n        </div>\n    )\n}","import React from 'react';\nimport { AppBar, Toolbar, TextField, InputAdornment, Avatar, Badge, makeStyles, Grid, Menu, MenuItem, Divider, Typography, Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Icon from './Logo/icon';\n\nconst useStyles = makeStyles((theme) => ({\n    \"icon-hover\": {\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"50%\",\n        \"&:hover\" : {\n            // backgroundColor: \"rgba(255, 20, 147, .5)\",\n            backgroundColor: \"rgba(64, 224, 208, .5)\"\n        }\n    },\n    menu: {\n        marginTop: \"70px\",\n    },\n    \"menu-item\":{\n        minWidth: \"200px\",\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(63, 81, 181, .05)\",\n        }\n    },\n    \"MuiMenuItem-root\": {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        alignItems: \"flex-start\"\n    }\n}));\n\nexport default function NavBar (){\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return(\n        <AppBar>\n            <Toolbar>\n                <Grid container alignItems=\"center\" spacing={0}>\n                    <Grid item xs={3}>\n                        <Icon />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField \n                            fullWidth\n                            placeholder=\"Search...\"\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </Grid>                    \n                    <Grid item xs={3} container alignItems=\"center\" justify=\"flex-end\" spacing={3}>\n                        <Grid item className={classes[\"icon-hover\"]}>\n                            <GitHubIcon />\n                        </Grid>\n                        <Grid item className={classes[\"icon-hover\"]}>\n                            <Badge color=\"secondary\" variant=\"dot\" invisible={false}>\n                                <NotificationsIcon />\n                            </Badge>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"secondary\">Login</Button>\n                        </Grid>\n                        <Grid item>\n                            <Avatar alt=\"username\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}/>\n                            <Menu\n                                className={classes.menu}\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'right',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                            >\n                                <MenuItem className={classes[\"MuiMenuItem-root\"]} onClick={handleClose}>\n                                    <Typography variant=\"h6\" >Duchess-Toffee</Typography>\n                                    <Typography>100 pts</Typography>\n                                </MenuItem>\n                                <Divider/>\n                                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>Messages</MenuItem>\n                                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>Settings</MenuItem>\n                                <MenuItem className={classes[\"menu-item\"]} onClick={handleClose}>Logout</MenuItem>\n                            </Menu>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                \n            </Toolbar>\n        </AppBar>\n    )\n}","import React from 'react';\nimport './logo.sass';\n\nexport default function Logo(){\n    return(\n        <div className='logo'>\n            <h2 className='color-text'>MEEP</h2>\n            <h1 className='name'>\n                <mark className='highlight'>more eyes, plz!</mark>\n            </h1>        \n        </div>\n    )\n}","import React from 'react';\nimport { useState } from 'react';\nimport { Typography, Grid, Card, CardContent, Chip, makeStyles, Avatar, Popover, CardActionArea } from '@material-ui/core';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n        header: {\n            fontSize: \"1.5rem\",\n            fontWeight: \"bold\",\n            \"&:hover\" :{\n                color: \"#3f51b5\",\n            }\n          },\n        labelContainer: {\n            '& > *' : {\n                margin: theme.spacing(.5, 1, .5, 0),\n            }\n        },\n        popover: {\n            pointerEvents: 'none',\n        },\n        paper: {\n            padding: theme.spacing(1),\n        },\n        \"popover-text\":{\n            fontSize: \"12px\",\n        },\n        \"card-action\": {\n            display: \"flex\",\n        },\n        comments: {\n            '&:hover': {\n                color: \"#f50057\",\n            }\n        }\n    })\n);\n\nexport default function ListCard (){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handlePopoverOpen = (event : any) => {\n        setAnchorEl(event.currentTarget);\n        console.log('hi')\n    };\n\n    const handlePopoverClose = () => {\n        setAnchorEl(null);\n        console.log('bye')\n    };\n\n    const open = Boolean(anchorEl);\n    \n    return(\n        <Card>\n            <CardActionArea className={classes['card-action']}>\n                <CardContent>\n                    <Grid spacing={8} container>\n                        <Grid item direction=\"column\" alignItems=\"center\" xs={1} spacing={1} container>\n                            <Grid item>\n                                <Avatar alt=\"username\"/>\n                            </Grid>\n                            <Grid item>\n                                <DoneIcon \n                                    aria-owns={open ? 'mouse-over-popover' : undefined}\n                                    aria-haspopup=\"true\"\n                                    color=\"secondary\"\n                                    onMouseEnter={handlePopoverOpen}\n                                    onMouseLeave={handlePopoverClose}/>\n                                <Popover \n                                    id=\"mouse-over-popover\"\n                                    className={classes.popover}\n                                    classes={{\n                                      paper: classes.paper,\n                                    }}\n                                    open={open}\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                    }}\n                                    onClose={handlePopoverClose}\n                                    disableRestoreFocus>\n                                    <Typography className={classes['popover-text']}>Feedback already provided!</Typography>\n                                </Popover>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={11} sm container>\n                            <Grid item direction=\"row\" spacing={2} container>\n                                <Grid item xs={12}>\n                                    <Typography>Duchess-Toffee 👀 meeped 2 days ago</Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography className={classes.header} variant=\"h5\">\n                                        [MEEP] Could someone help to review this commit?\n                                    </Typography>\n                                </Grid>\n                                <Grid className={classes.labelContainer} item xs={12}>\n                                    <Chip size=\"small\" variant=\"outlined\" color=\"secondary\" disabled label=\"JavaScript\" />\n                                    <Chip size=\"small\" variant=\"outlined\" color=\"secondary\" disabled label=\"CSS\"/>\n                                    <Chip size=\"small\" variant=\"outlined\" disabled label=\"Sass\"/>\n                                    <Chip size=\"small\" variant=\"outlined\" disabled label=\"TypeScript\"/>\n                                    <Chip size=\"small\" variant=\"outlined\" color=\"primary\" disabled label=\"Web Development\"/>\n                                    <Chip size=\"small\" variant=\"outlined\" color=\"primary\" disabled label=\"UI Design\"/>\n                                    <Chip size=\"small\" variant=\"outlined\" color=\"primary\" disabled label=\"Mobile Applications\"/>\n                                </Grid>\n                                <Grid className={classes.comments} item xs={12} spacing={1} container>\n                                    <Grid item>\n                                        <CommentIcon />\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography>15 comments</Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}","import React from 'react';\nimport { Button, Card, CardContent, CardHeader, List, ListItem, ListItemText, ListItemAvatar, Avatar, makeStyles, Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    'avatar-spacing': {\n        minWidth: \"30px\",\n    },\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end', \n        justifyContent: \"center\",\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    \"MuiCardContent-root\": {\n        '&:last-child' :{\n            paddingBottom: 0,\n        }  \n    },\n    divider: {\n        marginTop: \"8px\",\n    },\n    username: {\n        transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\":{\n            color: \"#f50057\",\n            cursor: \"pointer\",\n        }\n    }\n}));\n\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n    return(\n        <Card>\n            <CardContent className={classes[\"MuiCardContent-root\"]}>\n                <CardHeader className={classes.header} title=\"🏆 Leaderboard\"/>\n                <Divider light/>\n                <List>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"jeremyong 🥇\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"duchess-toffee 🥈\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Elmo 🥉\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Oscar the Grouch\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Cookie Monster\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Big Bird\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Bert\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Ernie\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"The Count\"\n                        />\n                    </ListItem>\n                    <ListItem disableGutters>\n                        <ListItemAvatar className={classes['avatar-spacing']}>\n                            <Avatar className={classes.small} src=\"\"/>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.username}\n                            primary=\"Snuffleupagus\"\n                        />\n                    </ListItem>\n                    <Divider className={classes.divider} light/>\n                    <ListItem disableGutters className={classes[\"button-container\"]}>\n                        <Button className={classes.button} color=\"primary\" fullWidth disableElevation>See Full Leaderboard</Button>\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { Button, Card, CardContent, CardHeader, List, ListItem, ListItemText, ListItemAvatar, Avatar, makeStyles, Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    'avatar-spacing': {\n        minWidth: \"30px\",\n    },\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end', \n        justifyContent: \"center\",\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    \"MuiCardContent-root\": {\n        '&:last-child' :{\n            paddingBottom: 0,\n        }  \n    },\n    divider: {\n        marginTop: \"8px\",\n    },\n    username: {\n        transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\":{\n            color: \"#f50057\",\n            cursor: \"pointer\",\n        }\n    }\n}));\n\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n    return(\n        <Card>\n            <CardContent className={classes[\"MuiCardContent-root\"]}>\n                <CardHeader className={classes.header} title=\"🏆 Tags/Filter\"/>\n               \n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { Button, ButtonBase, Card, CardHeader, CardContent, List, ListItem, ListItemText, Divider, makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end', \n        justifyContent: \"center\",\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    \"MuiCardContent-root\": {\n        '&:last-child' :{\n            paddingBottom: 0,\n        }  \n    },\n    \"message-button\": {\n        width: \"100%\",\n        padding: \"8px\",\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(63, 81, 181, .05)\",\n        }\n    },\n    \"no-padding\": {\n        padding: theme.spacing(0),\n    },\n    text: {\n        textAlign: \"left\",\n        \"&:hover\":{\n            color: \"#3f51b5\"\n        }\n    }\n}));\n\n\nexport default function UserStats() {\n    const classes = useStyles();\n\n\n    return(\n        <Card>\n            <CardContent className={classes[\"MuiCardContent-root\"]}>\n                <CardHeader className={classes.header} title=\"📮 Messages\"/>\n                <Divider light/>\n                <List disablePadding>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]} color=\"primary\">\n                            <ListItemText className={classes.text}\n                                primary=\"Sparkles ✨\"\n                                secondary=\" (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"You're on Fire! 🔥\"\n                                secondary=\"Commented on 5+ posts in the last 24 hours. (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Unicorn 🦄\"\n                                secondary=\" (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Many Thanks! 🙌\"\n                                secondary=\"You've been thanked! (+5p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Key to Success! 🔑\"\n                                secondary=\"Requested help 10 times. (+5p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"You Got Comments! 👀\"\n                                secondary=\"Someone has commented on your commit.\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem className={classes[\"no-padding\"]} disableGutters>\n                        <ButtonBase className={classes[\"message-button\"]}>\n                            <ListItemText className={classes.text}\n                                primary=\"Congrats! 🎉\"\n                                secondary=\" (+10p)\"\n                            />\n                        </ButtonBase>\n                    </ListItem>\n                    <Divider light/>\n                    <ListItem disableGutters className={classes[\"button-container\"]}>\n                        <Button className={classes.button} color=\"primary\" fullWidth disableElevation>Go to Inbox</Button>\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { useState } from 'react';\nimport { Typography, Paper, List, ListItem, Button, Divider, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: 0,\n    },\n    \"button-container\": {\n        display: \"flex\",\n        alignItems: 'flex-end', \n        justifyContent: \"center\",\n        padding: theme.spacing(\"16px\", 0, \"16px\", 0),\n    },\n    button: {\n        fontWeight: \"bold\",\n    },\n    divider: {\n        margin: theme.spacing(\"28px\", 0),\n    },\n    container: {\n        padding: \"16px\",\n        backgroundColor: \"#f5f5f5\",\n    }\n}));\n\nexport default function UserStats() {\n    const classes = useStyles();\n    \n    return(\n        <Paper elevation={0} className={classes.container}>\n            <Typography variant=\"h5\">✨ Code of Conduct</Typography>\n            <div className={classes.divider}></div>\n            <Typography>MEEP! Welcome to more eyes, plz!</Typography> \n            <br/>\n            <Typography>Lorizzle crackalackin shiznit sit amizzle, doggy adipiscing elit. Nullizzle fo shizzle velizzle, uhuh ... yih! go to hizzle, bow wow wow things, gravida for sure, crunk. Brizzle shiznit tortizzle. Fo shizzle my nizzle erizzle. Pizzle izzle break yo neck, yall hizzle fizzle tempus tempor.</Typography>\n            <br/>\n            <Typography>Mauris pellentesque boom shackalack turpizzle:</Typography>\n            <List>  \n                <ListItem disableGutters>\n                    1. Shizzlin dizzle izzle yo mamma.\n                </ListItem>\n                <ListItem disableGutters>\n                    2. Pellentesque pot rhoncizzle i saw beyonces tizzles and my pizzle went crizzle.\n                </ListItem>\n                <ListItem disableGutters>\n                    3. In hac habitasse platea dictumst.\n                </ListItem>\n            </List>\n            <Typography>Izzle dapibizzle. Fo shizzle tellizzle urna, pretizzle eu, gangster break yo neck, yall, eleifend mammasay mammasa mamma oo sa, nunc. Sheezy suscipizzle. Crackalackin semper crazy sizzle purus. Shut the shizzle up interdum tellus. Ut gizzle adipiscing lorem. Fo shizzle mah nizzle fo rizzle, mah home g-dizzle non est. Sheezy sapizzle fizzle, ultricizzle fo shizzle mah nizzle fo rizzle, mah home g-dizzle, own yo' gangster, fermentizzle quizzle, . Funky fresh nizzle boofron. </Typography>\n            <div className={classes[\"button-container\"]}>\n                <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth disableElevation>Read More</Button>\n            </div>\n        </Paper>\n    )\n}","import React from 'react';\nimport { Card, CardContent, CardHeader, CardMedia, CardActions, Button, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\n    })\n);\n\nexport default function ListCard (){\n    const classes = useStyles();\n    \n    return(\n        <Card>\n            <CardContent>\n                <CardHeader \n                    title=\"MEEP! Join the more eyes, plz community by signing up through GitHub!\"\n                    subheader=\"Connect your GitHub repos by downloading more eyes, plz from the GitHub store.\"/>\n            </CardContent>\n            <CardMedia\n                image=\"../assets/github.jpg\"\n                title=\"Paella dish\"\n            />\n            <CardActions>\n                <Button>Go to GitHub</Button>\n                <Button>Find us in the Store</Button>\n            </CardActions>\n        </Card>\n    )\n}","const { Octokit } = require('@octokit/rest');\n\n// All API queries are made with the same octokit instance\nexport default new Octokit();","import octokit from './octokit';\n\nconst MEEPS_REPO = {\n    owner: 'moreeyesplz',\n    repo: 'meeps'\n};\n\nclass Issue {\n    data_: any = null;\n    user_: string = '';\n    commit_url_: string = '';\n    commit_message_: string = '';\n\n    constructor(data: any) {\n        const lines = data.body.split('\\n');\n        if (lines.length !== 3) {\n            return;\n        }\n        this.data_ = data;\n        this.user_ = lines[0];\n        this.commit_url_ = lines[1];\n        this.commit_message_ = atob(lines[2]);\n    }\n\n    get id(): number {\n        return this.data_.id;\n    }\n\n    get url(): string {\n        return this.data_.url;\n    }\n\n    get labels(): string[] {\n        return this.data_.labels;\n    }\n\n    get user(): string {\n        return this.user;\n    }\n\n    get commit_url(): string {\n        return this.commit_url_;\n    }\n\n    get commit_message(): string {\n        return this.commit_message_;\n    }\n}\n\nexport default class Issues {\n    issues: { [id: number]: Issue } = {};\n\n    async fetch(labels: string[] = []) {\n        const { data } = await octokit.issues.listForRepo({\n            ...MEEPS_REPO,\n            state: 'open',\n            labels,\n            sort: 'created',\n            direction: 'desc',\n        });\n        const ids: number[] = [];\n        for (let i = 0; i !== data.length; ++i) {\n            const iss = new Issue(data[i]);\n            if (iss.data_ !== null) {\n                this.issues[iss.id] = iss;\n                ids.push(iss.id);\n            }\n        }\n        return ids;\n    }\n\n    get(id: number): Issue | null {\n        return this.issues[id];\n    }\n};","import React, { useEffect, useState } from 'react'; import { Container, Grid, makeStyles } from '@material-ui/core';\nimport NavBar from './components/nav-bar';\nimport Logo from './components/Logo/logo';\nimport ListCard from './components/list-card';\nimport Leaderboard from './components/leaderboard';\nimport Filters from './components/filters';\nimport Messages from './components/message-feed';\nimport Conduct from './components/code-of-conduct';\nimport SignUpCard from './components/sign-up-card';\nimport Issues from './models/issues';\n\nconst useStyles = makeStyles((theme) => ({\n  'center-container': {\n    margin: theme.spacing(15, 'auto', 0, 'auto'),\n  },\n  logo: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nconst issues = new Issues;\n\nfunction App() {\n  const classes = useStyles();\n  const [labels, setLabels] = useState<string[]>([]);\n  const [issueIds, setIssueIds] = useState<number[]>([]);\n\n  useEffect(() => {\n    const fetchIssues = async () => {\n      const ids = await issues.fetch(labels);\n      setIssueIds(ids);\n    };\n\n    fetchIssues();\n  }, [labels]);\n\n  const cards: JSX.Element[] = [];\n  for (let i = 0; i !== issueIds.length; ++i) {\n    const issue = issues.get(issueIds[i]);\n    console.log(issue);\n    cards.push(\n      <Grid item key={i}>\n        <ListCard />\n      </Grid>\n    );\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <Container className={classes['center-container']} maxWidth='lg'>\n        <Grid direction=\"row\" spacing={3} container>\n\n\n          <Grid item direction=\"column\" xs={3} spacing={2} container>\n            <Grid item>\n              <div className={classes.logo}>\n                <Logo />\n              </div>\n            </Grid>\n            <Grid item>\n              <Filters />\n            </Grid>\n            <Grid item>\n              <Conduct />\n            </Grid>\n          </Grid>\n\n          <Grid item xs={9} spacing={2} container>\n            <Grid item xs={12}>\n              <SignUpCard />\n            </Grid>\n\n            <Grid item xs={12} spacing={0} justify=\"space-between\" container>\n              <Grid item direction=\"row\" xs={8} spacing={1} alignContent=\"flex-start\" container>\n                {cards}\n              </Grid>\n\n              <Grid item direction=\"column\" xs={4} spacing={2} container>\n                <Grid item>\n                  <Leaderboard />\n                </Grid>\n                <Grid item>\n                  <Messages />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n\n\n        </Grid>\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}